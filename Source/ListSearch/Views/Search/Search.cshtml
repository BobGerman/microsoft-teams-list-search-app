@model System.Collections.Generic.List<Lib.Models.KBInfo>
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Search</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/msteams")
</head>
<body class="surface theme-light">
    <div class="flex-column">
        <!-- Search input and list of results -->
        <div id="searchPanel" class="flex-column flex-1">
            <div class="select-wrapper">
                <button role="combobox" id="searchDatabase" class="select dropdown-toggle" data-toggle="dropdown">
                    <i aria-hidden="true" class="icon-base icon-arrowdown"></i>
                    <span id="comboboxText" class="placeholder-text">Select the list to search</span>
                </button>
                <ul class="select-items dropdown-menu">
                    @foreach (var kb in Model)
                    {
                        <li class="select-item" id="@Html.AttributeEncode(@kb.KBId)" data-question-display-name="@Html.AttributeEncode(kb.QuestionFieldDisplayName)">@kb.KBName</li>
                    }
                </ul>
            </div>
            <div id="searchKeywordDiv" class="searchBarDiv" style="display: none">
                <div class="labelOverwrite">Search by <span id="searchFieldDisplayName"></span></div>
                <div><i aria-hidden="true" class="icon-base icon-search"></i></div>
                <input id="inpSearchBox" placeholder="Search" class="input-field inputSearchBox" />
            </div>
            <div id="searchResultsDiv" class="flex-column flex-1">
                <div id="loader" style="display: none">
                    @Html.Partial("~/Views/Shared/_Spinner.cshtml")
                </div>
                <div id="resultsList" class="flex-1">
                </div>
                <div id="resultsError" style="display: none">
                    @Html.Partial("~/Views/Error/ErrorPartial.cshtml")
                </div>
            </div>
            <div class="actionButtonsRow">
                <button class="button-primary" disabled>Share</button>
                <button class="button-secondary" disabled>Back</button>
            </div>
        </div>

        <!-- Result card -->
        <div id="resultPanel" class="flex-column flex-1" style="display: none">
            <div class="resultCardHeading">Searching <span id="searchTerm" class='font-bold'></span> in <span id="searchListName" class='font-bold'></span></div>
            <hr class="resultCardSeparator" />
            <div id="resultCardViewContainer" class="flex-1"></div>
        </div>
    </div>
    <script>
        microsoftTeams.initialize();
    </script>
    <script>
        var token = '@ViewData["token"]';
        var doneTypingInterval = @System.Configuration.ConfigurationManager.AppSettings["SearchDelayInMilliseconds"];
        var typingTimer;
        var $input;
        var selectedKbId;           // ID of selected knowledge base
        var currentSearchText;      // Current search text

        $(function () {
            // Save input box and attach handlers
            $input = $('#inpSearchBox');
            $input.on('keyup', function () {
                clearTimeout(typingTimer);
                typingTimer = setTimeout(doneTyping, doneTypingInterval);
            });
            $input.on('keydown', function () {
                clearTimeout(typingTimer);
            });

            if ($input.length > 0 && $input.val() != "") {
                doneTyping();
            }

            let kbListItems = $(".select-item");
            if (kbListItems.length === 1) {
                // If there's only 1 item, select it immediately
                selectKnowledgeBase(kbListItems[0]);
            } else {
                // Attach click handlers to combobox items
                kbListItems.on("click", function (event) {
                    selectKnowledgeBase(event.target);
                });
            }
        });

        // Show loading indicator on all AJAX calls
        $(document).ajaxSend(function () {
            $("#loader").show();
            $("#resultsList").hide();
            $("#resultsError").hide();
        });

        // Select knowledge base
        function selectKnowledgeBase(listItemElement) {
            let element = $(listItemElement);
            selectedKbId = element.attr("id");

            let kbName = element.text();
            $("#comboboxText").text(kbName);
            $("#comboboxText").removeClass("placeholder-text");
            $("#searchListName").text(kbName);

            var question = element.attr("data-question-display-name");
            $("#searchFieldDisplayName").text(question);
            $input.val("");
            $("#searchKeywordDiv").show();

            $("#loader").hide();
            $("#resultsList").hide();
            $("#resultsError").hide();
        }

        // Check if the input has changed
        function isSearchTextChanged(text) {
            let trimmedSearchTerm = text && text.trim();
            return trimmedSearchTerm !== $input.val().trim();
        }

        // User is done typing (delay has passed since the last keystroke)
        function doneTyping() {
            // Skip processing if the effective search term hasn't changed
            if (!isSearchTextChanged(currentSearchText)) {
                return;
            }

            currentSearchText = $input.val().trim();
            updateSearchResults(currentSearchText);
        }

        // Update the search results from service
        function updateSearchResults(text) {
            $.ajax({
                type: "GET",
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "bearer " + token);
                },
                url: '@Url.Action("SearchResults")',
                data: { searchedKeyword: text, kbId: selectedKbId },
                success: function (result) {
                    if (!isSearchTextChanged(text)) {       // Don't update result if the user has changed the search term
                        $("#resultsList").html(result);

                        $("#loader").hide();
                        $("#resultsList").show();
                        $("#resultsError").hide();
                    }
                },
                error: function () {
                    if (!isSearchTextChanged(text)) {
                        $("#loader").hide();
                        $("#resultsList").hide();
                        $("#resultsError").show();
                    }
                }
            });
        }

        // Handle click on a search result
        function listItemClick(answer, question, id) {
            var payload = {
                answer: answer,
                question: question,
                id: id,
                token: token,
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("SetClickedItem")',
                data: payload,
                dataType: "json",
                success: function () {
                    $.ajax({
                        type: "GET",
                        beforeSend: function (request) {
                            request.setRequestHeader("Authorization", "bearer " + token);
                        },
                        url: '@Url.Action("ResultCardPartial")',
                        data: { kbId: selectedKbId },
                        success: function (result) {
                            $("#searchPanel").hide();
                            $("#resultPanel").show();

                            $("#resultCardViewContainer").html(result);
                            $("#searchTerm").text(currentSearchText);
                        },
                        error: function () {
                            $("#loader").hide();
                            $("#resultsList").hide();
                            $("#resultsError").show();
                        }
                    });
                },
                error: function () {
                    $("#loader").hide();
                    $("#resultsList").hide();
                    $("#resultsError").show();
                }
            });
        }

        // Navigate back to the search results list
        function goBackToSearchResults() {
            $("#searchPanel").show();
            $("#resultPanel").hide();

            $("#loader").hide();
            $("#resultsList").show();
            $("#resultsError").hide();
            doneTyping();
        }

        // Share the selected card
        function shareCard(card) {
            microsoftTeams.tasks.submitTask(card);
        }
    </script>
</body>
</html>